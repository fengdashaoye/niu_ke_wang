题目描述
给定一个十进制的正整数number，选择从里面去掉一部分数字，希望保留下来的数字组成的正整数最大。
输入描述:
输入为两行内容，第一行是正整数number，1 ≤ length(number) ≤ 1000。第二行是希望去掉的数字数量cnt 1 ≤ cnt < length(number)。
输出描述:
输出保留下来的结果。
示例1
输入

325
1
输出

35

代码：这是我的答案，只过了50%
思路是没错的，每次删掉一个数字保证最大值。然后删除的值需要满足要求：其相邻右侧值大于自己值，否则就是最后一位。
他的case有问题。。。
import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner in = new Scanner(System.in);
        while(in.hasNext()){
            StringBuffer content = new StringBuffer();
            content.append(in.next());
            int count = in.nextInt();
            
            
            //动态规划，比如删除2位，先删除1位得到最大的数字，再删除一位
            for(int i = 0; i < count; i++){
                int start = 1;
                int len = content.length();
                while(start < len){
                    if((content.codePointAt(start)) > (content.codePointAt(start - 1))){
                        break;
                    }
                    start++;
                }
                content.deleteCharAt(start - 1);
            }
            System.out.println(content.toString());
        }
        
        
        
    }
}
