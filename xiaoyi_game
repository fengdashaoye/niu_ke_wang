题目描述
小易喜欢的单词具有以下特性：
1.单词每个字母都是大写字母
2.单词没有连续相等的字母
3.单词没有形如“xyxy”(这里的x，y指的都是字母，并且可以相同)这样的子序列，子序列可能不连续。
例如：
小易不喜欢"ABBA"，因为这里有两个连续的'B'
小易不喜欢"THETXH"，因为这里包含子序列"THTH"
小易不喜欢"ABACADA"，因为这里包含子序列"AAAA"
小易喜欢"A","ABA"和"ABCBA"这些单词
给你一个单词，你要回答小易是否会喜欢这个单词。
输入描述:
输入为一个字符串，都由大写字母组成，长度小于100
输出描述:
如果小易喜欢输出"Likes",不喜欢输出"Dislikes"
示例1
输入

AAA
输出

Dislikes

思路：第一个条件和第二个条件很好解决，一个for循环即可。
对于第三个条件，需要多重循环，我们首先把只出现一次的字母去掉。
然后套上3个循环，如代码中，如果第三个循环遍历到的一个字母与第一个循环中遍历到的字母相同。
则开启第4重循环，如果第4重循环中遍历到的字母与第二重循环中遍历到的字母相同，则满足第三个条件。。。。

代码：
import java.util.*;

public class Main{
     public static void main(String[] args){
         Scanner in = new Scanner(System.in);
         while(in.hasNext()){
             String content = in.nextLine();
             int panduan = 0;
             HashMap<Character, Integer> frequency = new HashMap<Character, Integer>();
             for(int i = 0; i < content.length(); i++){
                 if(!isCapital(content.charAt(i))){
                     panduan = 1;
                     break;
                 }
                 if(i >= 1 && content.charAt(i) == content.charAt(i - 1)){
                     panduan = 1;
                     break;
                 }
                 if(frequency.containsKey(content.charAt(i))){
                     frequency.put(content.charAt(i), frequency.get(content.charAt(i)) + 1);
                 }else{
                     frequency.put(content.charAt(i), 1);
                 }
             }
             
             if(panduan == 1){
                 System.out.println("Dislikes");
             }else{
                 String backup = "";
                 for(int i = 0; i < content.length(); i++){
                     if(frequency.get(content.charAt(i)) != 1){
                         backup += content.charAt(i);
                     }
                 }
                 if(isThird(backup)){
                     System.out.println("Dislikes");
                 }else{
                     System.out.println("Likes");
                 }
             }
                 
                 
                 
        }
             
    }
    public static boolean isThird(String content){
        if(content.length() < 4){
            return false;
        }
        for(int i = 0; i < content.length() - 3; i++){
            for(int j = i + 1; j < content.length() - 2; j++){
                for(int k = j + 1; k < content.length() - 1; k++){
                    if(content.charAt(k) == content.charAt(i)){
                        for(int l = k + 1; l < content.length(); l++){
                            if(content.charAt(l) == content.charAt(j)){
                                return true;
                            }
                        }
                    }
                }
            }
        }
        return false;
    }
    public static boolean isCapital(char content){
        if(!(content >= 'A' && content <= 'Z')){
            return false;
        }
        return true;
    }
}
