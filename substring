题目描述
牛牛拿到了一个藏宝图，顺着藏宝图的指示，牛牛发现了一个藏宝盒，藏宝盒上有一个机关，机关每次会显示两个字符串 s 和 t，根据古老
的传说，牛牛需要每次都回答 t 是否是 s 的子序列。注意，子序列不要求在原字符串中是连续的，例如串 abc，它的子序列
就有 {空串, a, b, c, ab, ac, bc, abc} 8 种。
输入描述:
每个输入包含一个测试用例。每个测试用例包含两行长度不超过 10 的不包含空格的可见 ASCII 字符串。
输出描述:
输出一行 “Yes” 或者 “No” 表示结果。
示例1
输入

x.nowcoder.com
ooo
输出

Yes

思路：这道题利用递归,background，找一个字串某一个长度的字串。在递归里放循环即可。注意最后要删除末尾的字符，注意要i + 1，即开始的坐标要
变换。。。
代码：
import java.util.*;

public class Main{
    public static void main(String[] args){
        Main test = new Main();
        Scanner in = new Scanner(System.in);
        while(in.hasNext()){
            String first = in.nextLine();
            String second = in.nextLine();
            boolean result = test.getSubstring(first, "", second, second.length(), 0, false);
            if(result == true){
                System.out.println("Yes");
            }else{
                System.out.println("No");
            }
            result = false;
        }
    }
    public boolean getSubstring(String first, String content, String second, int length, int start,
                               boolean result){
        if(length == 0){
            if(second.equals(content)){
                return true;
            }else{
                return false;
            }
        }
        
        for(int i = start; i < first.length(); i++){
            content += first.charAt(i);
            result = result || getSubstring(first, content, second, length - 1, i + 1, result);
            content = content.substring(0, content.length() - 1);
        }
        return result;
    }
        
    
}
